// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Language {
  en_US
  de_DE
}

model Guest {
  id    String @id @default(uuid())
  email String @unique

  first_name        String?
  last_name         String?
  initials          String?
  avatar_url        String?
  bio               String?
  attendance_status Int     @default(-1)

  created_at     DateTime @default(now())
  profile_public Boolean  @default(false)
  need_bed       Boolean  @default(false)
  has_bed        Boolean  @default(false)
  is_vegan       Boolean  @default(false)

  companion    Companion[]
  guest_shifts GuestShift[]
}

model Companion {
  id                  String   @id @default(uuid())
  created_at          DateTime @default(now())
  name                String
  associated_guest_id String
  associated_guest    Guest    @relation(fields: [associated_guest_id], references: [id], onDelete: Cascade)
}

model Shift {
  id          Int         @id @default(autoincrement())
  order       Int         @default(autoincrement())
  shift_info  ShiftInfo[]
  shift_slots ShiftSlot[]
}

model ShiftInfo {
  shift_id Int
  shift    Shift    @relation(fields: [shift_id], references: [id], onDelete: Cascade)
  lang     Language
  name     String
  desc     String

  @@unique([shift_id, lang])
}

model ShiftSlot {
  id              Int          @id @default(autoincrement())
  shift_id        Int
  shift           Shift        @relation(fields: [shift_id], references: [id], onDelete: Cascade)
  start           DateTime
  end             DateTime
  capacity        Int
  assigned_guests GuestShift[]

  @@unique([shift_id, start, end])
}

model GuestShift {
  guest_id      String
  guest         Guest     @relation(fields: [guest_id], references: [id], onDelete: Cascade)
  shift_slot_id Int
  shift_slot    ShiftSlot @relation(fields: [shift_slot_id], references: [id], onDelete: Cascade)

  @@unique([guest_id, shift_slot_id])
}
